{
  "name": "vb",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_statement"
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "imports_statement"
        },
        {
          "type": "SYMBOL",
          "name": "namespace_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "class_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "method_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "field_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "SYMBOL",
          "name": "keyword"
        },
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "literal"
        },
        {
          "type": "SYMBOL",
          "name": "newline"
        },
        {
          "type": "SYMBOL",
          "name": "comment"
        }
      ]
    },
    "imports_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "Imports"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        }
      ]
    },
    "namespace_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "Namespace"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              }
            ]
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "End"
        },
        {
          "type": "STRING",
          "value": "Namespace"
        }
      ]
    },
    "class_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "Class"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "End"
        },
        {
          "type": "STRING",
          "value": "Class"
        }
      ]
    },
    "method_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "Sub"
            },
            {
              "type": "STRING",
              "value": "Function"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "parameter_list"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "As"
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_statement"
          }
        },
        {
          "type": "STRING",
          "value": "End"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "Sub"
            },
            {
              "type": "STRING",
              "value": "Function"
            }
          ]
        }
      ]
    },
    "field_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "Public"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "STRING",
          "value": "As"
        },
        {
          "type": "SYMBOL",
          "name": "identifier"
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "identifier"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "As"
                },
                {
                  "type": "SYMBOL",
                  "name": "identifier"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "identifier"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "STRING",
                        "value": "As"
                      },
                      {
                        "type": "SYMBOL",
                        "name": "identifier"
                      }
                    ]
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "keyword": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "Imports"
          },
          {
            "type": "STRING",
            "value": "Namespace"
          },
          {
            "type": "STRING",
            "value": "Class"
          },
          {
            "type": "STRING",
            "value": "Friend"
          },
          {
            "type": "STRING",
            "value": "End"
          },
          {
            "type": "STRING",
            "value": "Sub"
          },
          {
            "type": "STRING",
            "value": "Function"
          },
          {
            "type": "STRING",
            "value": "Property"
          },
          {
            "type": "STRING",
            "value": "Private"
          },
          {
            "type": "STRING",
            "value": "Public"
          },
          {
            "type": "STRING",
            "value": "ReadOnly"
          },
          {
            "type": "STRING",
            "value": "As"
          },
          {
            "type": "STRING",
            "value": "Return"
          },
          {
            "type": "STRING",
            "value": "New"
          },
          {
            "type": "STRING",
            "value": "Me"
          },
          {
            "type": "STRING",
            "value": "Dim"
          },
          {
            "type": "STRING",
            "value": "If"
          },
          {
            "type": "STRING",
            "value": "Then"
          },
          {
            "type": "STRING",
            "value": "Else"
          },
          {
            "type": "STRING",
            "value": "For"
          },
          {
            "type": "STRING",
            "value": "Each"
          },
          {
            "type": "STRING",
            "value": "In"
          },
          {
            "type": "STRING",
            "value": "Next"
          },
          {
            "type": "STRING",
            "value": "Do"
          },
          {
            "type": "STRING",
            "value": "Loop"
          },
          {
            "type": "STRING",
            "value": "While"
          },
          {
            "type": "STRING",
            "value": "Until"
          },
          {
            "type": "STRING",
            "value": "Select"
          },
          {
            "type": "STRING",
            "value": "Case"
          },
          {
            "type": "STRING",
            "value": "Goto"
          },
          {
            "type": "STRING",
            "value": "Const"
          },
          {
            "type": "STRING",
            "value": "True"
          },
          {
            "type": "STRING",
            "value": "False"
          },
          {
            "type": "STRING",
            "value": "Nothing"
          },
          {
            "type": "STRING",
            "value": "Not"
          },
          {
            "type": "STRING",
            "value": "And"
          },
          {
            "type": "STRING",
            "value": "Or"
          },
          {
            "type": "STRING",
            "value": "Xor"
          },
          {
            "type": "STRING",
            "value": "Mod"
          },
          {
            "type": "STRING",
            "value": "Rem"
          },
          {
            "type": "STRING",
            "value": "Exit"
          },
          {
            "type": "STRING",
            "value": "Try"
          },
          {
            "type": "STRING",
            "value": "Catch"
          },
          {
            "type": "STRING",
            "value": "Finally"
          },
          {
            "type": "STRING",
            "value": "Throw"
          },
          {
            "type": "STRING",
            "value": "Static"
          },
          {
            "type": "STRING",
            "value": "Shared"
          },
          {
            "type": "STRING",
            "value": "Overrides"
          },
          {
            "type": "STRING",
            "value": "Overloads"
          },
          {
            "type": "STRING",
            "value": "MustOverride"
          },
          {
            "type": "STRING",
            "value": "NotInheritable"
          },
          {
            "type": "STRING",
            "value": "NotOverridable"
          },
          {
            "type": "STRING",
            "value": "Partial"
          },
          {
            "type": "STRING",
            "value": "Implements"
          },
          {
            "type": "STRING",
            "value": "Inherits"
          },
          {
            "type": "STRING",
            "value": "Module"
          },
          {
            "type": "STRING",
            "value": "Interface"
          },
          {
            "type": "STRING",
            "value": "Enum"
          },
          {
            "type": "STRING",
            "value": "Structure"
          },
          {
            "type": "STRING",
            "value": "Delegate"
          },
          {
            "type": "STRING",
            "value": "ByRef"
          },
          {
            "type": "STRING",
            "value": "ByVal"
          },
          {
            "type": "STRING",
            "value": "Optional"
          },
          {
            "type": "STRING",
            "value": "ParamArray"
          },
          {
            "type": "STRING",
            "value": "Handles"
          },
          {
            "type": "STRING",
            "value": "WithEvents"
          },
          {
            "type": "STRING",
            "value": "With"
          },
          {
            "type": "STRING",
            "value": "Get"
          },
          {
            "type": "STRING",
            "value": "Set"
          },
          {
            "type": "STRING",
            "value": "AddHandler"
          },
          {
            "type": "STRING",
            "value": "RemoveHandler"
          },
          {
            "type": "STRING",
            "value": "RaiseEvent"
          },
          {
            "type": "STRING",
            "value": "SyncLock"
          },
          {
            "type": "STRING",
            "value": "Await"
          },
          {
            "type": "STRING",
            "value": "Async"
          },
          {
            "type": "STRING",
            "value": "Iterator"
          },
          {
            "type": "STRING",
            "value": "Yield"
          },
          {
            "type": "STRING",
            "value": "Is"
          }
        ]
      }
    },
    "symbol": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "STRING",
            "value": "&"
          },
          {
            "type": "STRING",
            "value": ":="
          },
          {
            "type": "STRING",
            "value": "@"
          },
          {
            "type": "STRING",
            "value": ":"
          },
          {
            "type": "STRING",
            "value": ","
          },
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "STRING",
            "value": "$"
          },
          {
            "type": "STRING",
            "value": "."
          },
          {
            "type": "STRING",
            "value": "="
          },
          {
            "type": "STRING",
            "value": "!"
          },
          {
            "type": "STRING",
            "value": ">="
          },
          {
            "type": "STRING",
            "value": ">"
          },
          {
            "type": "STRING",
            "value": "#"
          },
          {
            "type": "STRING",
            "value": "<="
          },
          {
            "type": "STRING",
            "value": "{"
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "STRING",
            "value": "<"
          },
          {
            "type": "STRING",
            "value": "-"
          },
          {
            "type": "STRING",
            "value": "-="
          },
          {
            "type": "STRING",
            "value": "*"
          },
          {
            "type": "STRING",
            "value": "<>"
          },
          {
            "type": "STRING",
            "value": "%"
          },
          {
            "type": "STRING",
            "value": "+"
          },
          {
            "type": "STRING",
            "value": "+="
          },
          {
            "type": "STRING",
            "value": "^"
          },
          {
            "type": "STRING",
            "value": "}"
          },
          {
            "type": "STRING",
            "value": ")"
          },
          {
            "type": "STRING",
            "value": ";"
          },
          {
            "type": "STRING",
            "value": "["
          },
          {
            "type": "STRING",
            "value": "]"
          }
        ]
      }
    },
    "literal": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "string_literal"
        },
        {
          "type": "SYMBOL",
          "name": "date_literal"
        },
        {
          "type": "SYMBOL",
          "name": "color_literal"
        },
        {
          "type": "SYMBOL",
          "name": "integer_literal"
        },
        {
          "type": "SYMBOL",
          "name": "double_literal"
        },
        {
          "type": "SYMBOL",
          "name": "file_number"
        },
        {
          "type": "SYMBOL",
          "name": "octal_literal"
        },
        {
          "type": "SYMBOL",
          "name": "frx_offset"
        },
        {
          "type": "SYMBOL",
          "name": "guid"
        }
      ]
    },
    "string_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\"([^\"\\r\\n]|\"\")*\""
      }
    },
    "date_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "#[^#\\r\\n]*#"
      }
    },
    "color_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "&H[0-9A-F]+&?"
      }
    },
    "integer_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[0-9]+(E[0-9]+)*(#|&|!|@)?"
      }
    },
    "double_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[0-9]*\\.[0-9]+(E(\\+|-)?[0-9]+)*(#|&|!|@)?"
      }
    },
    "file_number": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "#[A-Z0-9_ÄÖÜÁÉÍÓÚÂÊÎÔÛÀÈÌÒÙÃẼĨÕŨÇ]+"
      }
    },
    "octal_literal": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "&O[0-7]+&?"
      }
    },
    "frx_offset": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": ":[0-9A-F]+"
      }
    },
    "guid": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\{[0-9A-F]+-[0-9A-F]+-[0-9A-F]+-[0-9A-F]+-[0-9A-F]+\\}"
      }
    },
    "identifier": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "[A-Za-z_][A-Za-z0-9_]*"
      }
    },
    "line_continuation": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": " _\\r?\\n"
      }
    },
    "newline": {
      "type": "TOKEN",
      "content": {
        "type": "PATTERN",
        "value": "\\r?\\n"
      }
    },
    "comment": {
      "type": "TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "'"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "REM"
              },
              {
                "type": "PATTERN",
                "value": ".*"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    },
    {
      "type": "SYMBOL",
      "name": "line_continuation"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
